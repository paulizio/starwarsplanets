{"version":3,"sources":["components/Planetsfilter.js","App.js","index.js"],"names":["Planetsfilter","planets","residents","mergedArray","filter","p","length","sort","a","b","parseInt","isNaN","diameter","map","planet","res","homeworld","url","name","className","resident","App","useState","setPlanets","setResidents","useEffect","first","axios","get","second","third","fourth","fifth","sixth","all","then","spread","responseOne","responseTwo","responesThree","responseFour","responsesFive","responsesSix","concat","data","results","seventh","eigth","ninth","responsesSeven","responsesEight","responsesNine","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9428768c.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport '../App.css';\nconst Planetsfilter=({ planets,residents }) => {\n//Only show planets that have residents\n  let planetsWithResidents=planets.filter(p => p.residents.length!==0);\n  //Sort planets by diameter smallest to largest\n  let sortedByDiameter=planetsWithResidents.sort((a,b) => parseInt(isNaN(a.diameter)?0:a.diameter)-parseInt(isNaN(b.diameter)?0:b.diameter));\n  //Merge planets and residents together based on homeworld/url\n  let mergedArray = sortedByDiameter.map(planet => ({ ...planet, residents:residents.filter(res => res.homeworld===planet.url).map(res => res.name) }));\n\n\n  return(\n    <div className=\"tableFixHead\">\n      <table>\n        <thead>\n          <tr>\n            <th>Planet</th>\n            <th>Diameter</th>\n            <th>Residents</th>\n          </tr>\n        </thead>\n        <tbody>\n          {mergedArray.map(p => <tr key={p.name}><td >{p.name}</td><td>{p.diameter}</td><td>{p.residents.map(resident => <ul key={resident}>{resident}</ul>)}</td></tr>)}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nexport default Planetsfilter;\n\n","import React,{ useEffect,useState } from 'react';\nimport axios from 'axios';\nimport Planetsfilter from './components/Planetsfilter';\nimport './App.css';\n\nconst App=() => {\n  const [planets,setPlanets]=useState([]);\n  const [residents,setResidents]=useState([]);\n\n  //Get planets from all pages\n  useEffect(() => {\n    const first=axios.get('https://swapi.dev/api/planets');\n    const second=axios.get('http://swapi.dev/api/planets/?page=2');\n    const third=axios.get('http://swapi.dev/api/planets/?page=3');\n    const fourth=axios.get('http://swapi.dev/api/planets/?page=4');\n    const fifth= axios.get('http://swapi.dev/api/planets/?page=5');\n    const sixth=axios.get('http://swapi.dev/api/planets/?page=6');\n    axios.all([first,second,third,fourth,fifth,sixth]).then(\n      axios.spread(\n        (...responses) => {\n          const responseOne = responses[0];\n          const responseTwo = responses[1];\n          const responesThree = responses[2];\n          const responseFour=responses[3];\n          const responsesFive=responses[4];\n          const responsesSix=responses[5];\n          setPlanets(planets.concat(\n            responseOne.data.results,\n            responseTwo.data.results,\n            responesThree.data.results,\n            responseFour.data.results,\n            responsesFive.data.results,\n            responsesSix.data.results\n          ));\n        })\n    );},[]);\n\n  //Get residents from all pages\n  useEffect(() => {\n    const first=axios.get('https://swapi.dev/api/people');\n    const second=axios.get('http://swapi.dev/api/people/?page=2');\n    const third=axios.get('http://swapi.dev/api/people/?page=3');\n    const fourth=axios.get('http://swapi.dev/api/people/?page=4');\n    const fifth= axios.get('http://swapi.dev/api/people/?page=5');\n    const sixth=axios.get('http://swapi.dev/api/people/?page=6');\n    const seventh=axios.get('http://swapi.dev/api/people/?page=7');\n    const eigth=axios.get('http://swapi.dev/api/people/?page=8');\n    const ninth=axios.get('http://swapi.dev/api/people/?page=9');\n    axios.all([first,second,third,fourth,fifth,sixth,seventh,eigth,ninth]).then(\n      axios.spread(\n        (...responses) => {\n          const responseOne = responses[0];\n          const responseTwo = responses[1];\n          const responesThree = responses[2];\n          const responseFour=responses[3];\n          const responsesFive=responses[4];\n          const responsesSix=responses[5];\n          const responsesSeven=responses[6];\n          const responsesEight=responses[7];\n          const responsesNine=responses[8];\n          setResidents(planets.concat(\n            responseOne.data.results,\n            responseTwo.data.results,\n            responesThree.data.results,\n            responseFour.data.results,\n            responsesFive.data.results,\n            responsesSix.data.results,\n            responsesSeven.data.results,\n            responsesEight.data.results,\n            responsesNine.data.results\n          ));\n        })\n    );},[]);\n\n  return (\n    <div className=\"center\">\n      <img src={'https://fontmeme.com/permalink/201103/0869a6e4e4dd64aa577d10f506519065.png'} alt=\"\"/>\n      <div>\n        <h1>Planets</h1>\n        <Planetsfilter planets={planets} residents={residents}/>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}